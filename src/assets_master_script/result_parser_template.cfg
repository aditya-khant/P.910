# Configuration for ´result_parser.py´ script pf P.910-crowd

[general]
number_of_questions_in_rating: {{cfg.q_num}}
expected_votes_per_file: 5
scale: {{cfg.scale}}
# "condition_pattern" specifies a regex to extract the condition name from the file name.
# example: Assuming "D501_C03_M2_S02.wav" is a file name,and "03" is the condition name. The pattern will be
# ".*_c(?P<condition_num>\d{1,2})_.*.wav" , you should also use condition_keys
# uncomment both when condition level aggregation is needed

#condition_pattern:{{cfg.condition_pattern}}
#condition_keys = {{cfg.condition_keys}}


[qualification]
plate3 = 29
plate4 = 5
accepted_device = {{cfg.accepted_device}}
min_device_resolution = {{cfg.min_device_resolution}}
min_screen_refresh_rate = {{cfg.min_screen_refresh_rate}}

[trapping]
# question name that contains the url to of trapping question
url_found_in: input.tp_clip
# question name that contains the answer of trapping question
ans_found_in: input.tp_ans

[gold_question]
url_found_in: input.gold_clip
ans_found_in: input.gold_ans
# accepted variance from correct_ans
variance: 1


[acceptance_criteria]
all_video_played_equal: 1
# number of correct answers to the math questions should be bigger and equal to
check_qualification: 1
check_setup: 1
correct_matrix_bigger_equal: 1
correct_tps_bigger_equal: 1
# NOTE: this value should be synchronized by the corresponding value in the ACR.html
allowedMaxHITsInProject: {{cfg.max_allowed_hits}}
rejection_feedback :Answer to this assignment did not pass the quality control check.

[accept_and_use]
# including acceptance_criteria
variance_bigger_equal: 0.1
#outlier_removal: true
gold_standard_bigger_equal:1
viewing_duration_over:1.15
correct_matrix_bigger_equal: 2

[bonus]
quantity_hits_more_than: {{cfg.quantity_hits_more_than}}
quantity_bonus: {{cfg.quantity_bonus}}
quality_top_percentage: {{cfg.quality_top_percentage}}
quality_bonus: {{cfg.quality_bonus}}
quality_min_pcc: 0.7
